// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id Int @id @default(autoincrement())

  username     String @unique @db.VarChar(25)
  passwordHash String
  role         Role   @default(USER)

  Posts    Post[]
  Comments Comment[]
}

model Post {
  id Int @id @default(autoincrement())

  title     String   @db.VarChar(100)
  content   String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  Comment  Comment[]

  @@index([createdAt])
}

model Comment {
  id Int @id @default(autoincrement())

  content   String   @db.VarChar(5000)
  likes     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author          User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post            Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  parentComment   Comment?  @relation("CommentReplies", fields: [parentCommentId], references: [id], onDelete: Cascade)
  replies         Comment[] @relation("CommentReplies")
  authorId        Int
  postId          Int
  parentCommentId Int?
}
